---
import { ViewTransitions } from 'astro:transitions';
import Navbar from '../components/Navbar.astro';
import Particles from '../components/Particles.astro';
import '@fontsource-variable/onest';

interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="es" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="stylesheet" href="https://unpkg.com/aos@2.3.1/dist/aos.css" />
    <script src="https://cdn.jsdelivr.net/particles.js/2.0.0/particles.min.js"></script>
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <ViewTransitions />
  </head>
  <body class="bg-light dark:bg-dark text-dark dark:text-light min-h-screen">
    <div class="relative z-0">
      <Particles />
    </div>
    <Navbar />
    <main class="pt-10">
      <slot />
    </main>

    <script is:inline src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>
    <script is:inline>
      function initAOS() {
        AOS.init({
          duration: 800,
          easing: 'ease-out-cubic',
          once: false,
          mirror: true,
          disable: false
        });
      }

      // Inicializar AOS cuando se carga el documento
      document.addEventListener('astro:page-load', () => {
        initAOS();
      });

      // Reiniciar AOS cuando cambia el tema
      document.addEventListener('astro:after-swap', () => {
        initAOS();
      });
    </script>

    <script is:inline>
      // Función para manejar el tema
      function handleTheme() {
        const theme = (() => {
          if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
            return localStorage.getItem('theme');
          }
          if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
            return 'dark';
          }
          return 'light';
        })();

        if (theme === 'light') {
          document.documentElement.classList.remove('dark');
        } else {
          document.documentElement.classList.add('dark');
        }

        window.localStorage.setItem('theme', theme);
      }

      // Ejecutar al cargar
      handleTheme();

      // Ejecutar en cada navegación
      document.addEventListener('astro:after-swap', handleTheme);
    </script>
  </body>
</html>

<style is:global>
  :root {
    color-scheme: dark light;
  }

  html {
    font-family: 'Onest Variable', system-ui, sans-serif;
  }

  body {
    min-height: 100vh;
    overscroll-behavior: none;
  }

  /* Scrollbar */
  ::-webkit-scrollbar {
    width: 8px;
  }

  ::-webkit-scrollbar-track {
    background: theme('colors.light.100');
  }

  ::-webkit-scrollbar-thumb {
    background: theme('colors.light.200');
    border-radius: 4px;
  }

  ::-webkit-scrollbar-thumb:hover {
    background: theme('colors.accent');
  }

  .dark ::-webkit-scrollbar-track {
    background: theme('colors.dark.100');
  }

  .dark ::-webkit-scrollbar-thumb {
    background: theme('colors.dark.200');
  }

  /* Animaciones */
  @keyframes floating {
    0%, 100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-10px);
    }
  }

  .animate-floating {
    animation: floating 3s ease-in-out infinite;
  }

  .hover-float {
    transition: transform 0.3s ease;
  }

  .hover-float:hover {
    transform: translateY(-5px);
  }

  @keyframes shine {
    from {
      background-position: 200% center;
    }
  }

  .animate-shine {
    background: linear-gradient(
      to right,
      transparent 20%,
      rgba(255, 255, 255, 0.2) 40%,
      rgba(255, 255, 255, 0.2) 60%,
      transparent 80%
    );
    background-size: 200% auto;
    animation: shine 2s linear infinite;
  }

  .animate-pulse {
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }

  @keyframes pulse {
    0%, 100% {
      opacity: 1;
    }
    50% {
      opacity: .5;
    }
  }

  .animate-bounce {
    animation: bounce 1s infinite;
  }

  @keyframes bounce {
    0%, 100% {
      transform: translateY(-25%);
      animation-timing-function: cubic-bezier(0.8, 0, 1, 1);
    }
    50% {
      transform: translateY(0);
      animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
    }
  }

  /* Card Hover Effects */
  .card-hover {
    transition: all 0.3s ease;
  }

  .card-hover:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0, 255, 178, 0.1);
  }

  /* Light Mode Improvements */
  .bg-light {
    background-color: #ffffff;
  }

  .text-dark {
    color: #1a1a1a;
  }

  .border-light {
    border-color: rgba(26, 26, 26, 0.1);
  }
</style>